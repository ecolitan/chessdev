#code snippets I might use later.
"""
keys = [
56, 57, 58, 59, 60, 61, 62, 63,
48, 49, 50, 51, 52, 53, 54, 55,
40, 41, 42, 43, 44, 45, 46, 47,
32, 33, 34, 35, 36, 37, 38, 39,
24, 25, 26, 27, 28, 29, 30, 31,
16, 17, 18, 19, 20, 21, 22, 23,
8, 9, 10, 11, 12, 13, 14, 15,
0, 1, 2, 3, 4, 5, 6, 7,]

values = [
4, 4, 4, 4, 4, 4, 4, 4,
4, 3, 3, 3, 3, 3, 3, 4,
4, 3, 2, 2, 2, 2, 3, 4,
4, 3, 2, 1, 1, 2, 3, 4,
4, 3, 2, 1, 1, 2, 3, 4,
4, 3, 2, 2, 2, 2, 3, 4,
4, 3, 3, 3, 3, 3, 3, 4,
4, 4, 4, 4, 4, 4, 4, 4,]

dictionary = dict(zip(keys, values))
print dictionary

"""
def upright(square):
    n, m = square
    n, m = square
    A = []
    def testend(a, b):
        if (a == 8 or b == 8):
            return True
        return False
    while not testend(n, m):
        n += 1
        m += 1
        A.append((n,m))
    return A
for square in [(1,1), (2,1), (3,1), (4,1), (5,1), (6,1), (7,1), (8,1), (1,2), (2,2), (3,2), (4,2), (5,2), (6,2), (7,2), (8,2), (1,3), (2,3), (3,3), (4,3), (5,3), (6,3), (7,3), (8,3), (1,4), (2,4), (3,4), (4,4), (5,4), (6,4), (7,4), (8,4), (1,5), (2,5), (3,5), (4,5), (5,5), (6,5), (7,5), (8,5), (1,6), (2,6), (3,6), (4,6), (5,6), (6,6), (7,6), (8,6), (1,7), (2,7), (3,7), (4,7), (5,7), (6,7), (7,7), (8,7), (1,8), (2,8), (3,8), (4,8), (5,8), (6,8), (7,8), (8,8)]:
    print upright(square)
